// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`home screen with title is correctly rendered 1`] = `
<View
  style={
    [
      {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    insets={
      {
        "bottom": 0,
        "left": 0,
        "right": 0,
        "top": 0,
      }
    }
    style={
      [
        {
          "backgroundColor": "#00B4D8",
          "height": 60,
          "paddingTop": 0,
          "width": "100%",
        },
        undefined,
      ]
    }
  >
    <View
      style={
        [
          {
            "alignItems": "center",
            "flex": 1,
            "justifyContent": "center",
          },
          undefined,
        ]
      }
    >
      <Text
        style={
          [
            {
              "fontSize": 20,
              "fontWeight": "bold",
            },
            undefined,
          ]
        }
      >
        MyLEAGUE
      </Text>
    </View>
  </View>
  <View
    style={
      [
        {
          "alignItems": "center",
          "flex": 1,
          "margin": 25,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        {
          "height": 75,
          "width": undefined,
        }
      }
    />
    <TextInput
      onChangeText={[Function]}
      placeholder="Summoner's name"
      placeholderTextColor="gray"
      style={
        [
          {
            "borderColor": "gray",
            "borderRadius": 6,
            "borderWidth": 1,
            "fontSize": 16,
            "height": 40,
            "textAlign": "center",
            "width": 250,
          },
          undefined,
        ]
      }
    />
    <View
      style={
        {
          "height": 12,
          "width": undefined,
        }
      }
    />
    <View
      onLayout={[Function]}
      style={
        {
          "borderColor": "gray",
          "borderRadius": 6,
          "borderWidth": 1,
          "height": 40,
          "justifyContent": "center",
          "width": 250,
        }
      }
    >
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": undefined,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessible={false}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "alignItems": "center",
            "flexDirection": "row",
            "height": 35,
            "justifyContent": "space-between",
          }
        }
      >
        <Text
          style={
            [
              {
                "flex": 1,
                "fontSize": 16,
                "writingDirection": "ltr",
              },
              {
                "color": "gray",
                "textAlign": "center",
              },
              {},
            ]
          }
        >
          Server
        </Text>
        <Image
          source={1}
          style={
            {
              "height": 20,
              "tintColor": "gray",
              "width": 20,
            }
          }
        />
      </View>
    </View>
    <View
      style={
        {
          "height": 40,
          "width": undefined,
        }
      }
    />
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "alignItems": "center",
          "backgroundColor": "#00B4D8",
          "borderColor": "gray",
          "borderRadius": 6,
          "borderWidth": 1,
          "height": 40,
          "justifyContent": "center",
          "opacity": 1,
          "width": 250,
        }
      }
    >
      <Text
        style={
          [
            {
              "fontSize": 16,
              "fontWeight": "bold",
            },
            undefined,
          ]
        }
      >
        Search
      </Text>
    </View>
  </View>
</View>
`;
